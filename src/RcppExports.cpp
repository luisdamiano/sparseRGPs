// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// real_to_pos
NumericVector real_to_pos(NumericVector x);
RcppExport SEXP _sparseRGPs_real_to_pos(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(real_to_pos(x));
    return rcpp_result_gen;
END_RCPP
}
// pos_to_real
NumericVector pos_to_real(NumericVector x);
RcppExport SEXP _sparseRGPs_pos_to_real(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(pos_to_real(x));
    return rcpp_result_gen;
END_RCPP
}
// real_to_bounded
NumericVector real_to_bounded(NumericVector x, NumericVector ub, NumericVector lb);
RcppExport SEXP _sparseRGPs_real_to_bounded(SEXP xSEXP, SEXP ubSEXP, SEXP lbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lb(lbSEXP);
    rcpp_result_gen = Rcpp::wrap(real_to_bounded(x, ub, lb));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dsigmaC
Rcpp::List dsqexp_dsigmaC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_dsqexp_dsigmaC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dsigmaC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dsigma_ardC
Rcpp::List dsqexp_dsigma_ardC(NumericVector x1, NumericVector x2, List cov_par, StringVector lnames);
RcppExport SEXP _sparseRGPs_dsqexp_dsigma_ardC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP, SEXP lnamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< StringVector >::type lnames(lnamesSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dsigma_ardC(x1, x2, cov_par, lnames));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dlC
Rcpp::List dsqexp_dlC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_dsqexp_dlC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dlC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dl_ardC
Rcpp::List dsqexp_dl_ardC(NumericVector x1, NumericVector x2, List cov_par, StringVector lnames, double comp);
RcppExport SEXP _sparseRGPs_dsqexp_dl_ardC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP, SEXP lnamesSEXP, SEXP compSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< StringVector >::type lnames(lnamesSEXP);
    Rcpp::traits::input_parameter< double >::type comp(compSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dl_ardC(x1, x2, cov_par, lnames, comp));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dtauC
Rcpp::List dsqexp_dtauC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_dsqexp_dtauC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dtauC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dx2C
Rcpp::List dsqexp_dx2C(NumericVector x1, NumericVector x2, List cov_par, NumericVector lb, NumericVector ub);
RcppExport SEXP _sparseRGPs_dsqexp_dx2C(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP, SEXP lbSEXP, SEXP ubSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ub(ubSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dx2C(x1, x2, cov_par, lb, ub));
    return rcpp_result_gen;
END_RCPP
}
// dsqexp_dx2_ardC
Rcpp::List dsqexp_dx2_ardC(NumericVector x1, NumericVector x2, List cov_par, NumericVector lb, NumericVector ub, StringVector lnames);
RcppExport SEXP _sparseRGPs_dsqexp_dx2_ardC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP, SEXP lbSEXP, SEXP ubSEXP, SEXP lnamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< StringVector >::type lnames(lnamesSEXP);
    rcpp_result_gen = Rcpp::wrap(dsqexp_dx2_ardC(x1, x2, cov_par, lb, ub, lnames));
    return rcpp_result_gen;
END_RCPP
}
// dexp_dsigmaC
Rcpp::List dexp_dsigmaC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_dexp_dsigmaC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(dexp_dsigmaC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// dexp_dlC
Rcpp::List dexp_dlC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_dexp_dlC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(dexp_dlC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// dexp_dtauC
Rcpp::List dexp_dtauC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_dexp_dtauC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(dexp_dtauC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// dsig_dthetaC
NumericMatrix dsig_dthetaC(NumericMatrix x, NumericMatrix x_pred, List cov_par, String cov_fun, String par_name);
RcppExport SEXP _sparseRGPs_dsig_dthetaC(SEXP xSEXP, SEXP x_predSEXP, SEXP cov_parSEXP, SEXP cov_funSEXP, SEXP par_nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_pred(x_predSEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< String >::type cov_fun(cov_funSEXP);
    Rcpp::traits::input_parameter< String >::type par_name(par_nameSEXP);
    rcpp_result_gen = Rcpp::wrap(dsig_dthetaC(x, x_pred, cov_par, cov_fun, par_name));
    return rcpp_result_gen;
END_RCPP
}
// dsig_dtheta_ardC
NumericMatrix dsig_dtheta_ardC(NumericMatrix x, NumericMatrix x_pred, List cov_par, String cov_fun, String par_name, StringVector lnames);
RcppExport SEXP _sparseRGPs_dsig_dtheta_ardC(SEXP xSEXP, SEXP x_predSEXP, SEXP cov_parSEXP, SEXP cov_funSEXP, SEXP par_nameSEXP, SEXP lnamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_pred(x_predSEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< String >::type cov_fun(cov_funSEXP);
    Rcpp::traits::input_parameter< String >::type par_name(par_nameSEXP);
    Rcpp::traits::input_parameter< StringVector >::type lnames(lnamesSEXP);
    rcpp_result_gen = Rcpp::wrap(dsig_dtheta_ardC(x, x_pred, cov_par, cov_fun, par_name, lnames));
    return rcpp_result_gen;
END_RCPP
}
// cov_fun_sqrd_expC
double cov_fun_sqrd_expC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_cov_fun_sqrd_expC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_fun_sqrd_expC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// cov_fun_sqrd_exp_ardC
double cov_fun_sqrd_exp_ardC(NumericVector x1, NumericVector x2, List cov_par, StringVector lnames);
RcppExport SEXP _sparseRGPs_cov_fun_sqrd_exp_ardC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP, SEXP lnamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< StringVector >::type lnames(lnamesSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_fun_sqrd_exp_ardC(x1, x2, cov_par, lnames));
    return rcpp_result_gen;
END_RCPP
}
// cov_fun_expC
double cov_fun_expC(NumericVector x1, NumericVector x2, List cov_par);
RcppExport SEXP _sparseRGPs_cov_fun_expC(SEXP x1SEXP, SEXP x2SEXP, SEXP cov_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_fun_expC(x1, x2, cov_par));
    return rcpp_result_gen;
END_RCPP
}
// make_cov_matC
NumericMatrix make_cov_matC(NumericMatrix x, NumericMatrix x_pred, List cov_par, String cov_fun, double delta);
RcppExport SEXP _sparseRGPs_make_cov_matC(SEXP xSEXP, SEXP x_predSEXP, SEXP cov_parSEXP, SEXP cov_funSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_pred(x_predSEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< String >::type cov_fun(cov_funSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(make_cov_matC(x, x_pred, cov_par, cov_fun, delta));
    return rcpp_result_gen;
END_RCPP
}
// make_cov_mat_ardC
NumericMatrix make_cov_mat_ardC(NumericMatrix x, NumericMatrix x_pred, List cov_par, String cov_fun, double delta, StringVector lnames);
RcppExport SEXP _sparseRGPs_make_cov_mat_ardC(SEXP xSEXP, SEXP x_predSEXP, SEXP cov_parSEXP, SEXP cov_funSEXP, SEXP deltaSEXP, SEXP lnamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_pred(x_predSEXP);
    Rcpp::traits::input_parameter< List >::type cov_par(cov_parSEXP);
    Rcpp::traits::input_parameter< String >::type cov_fun(cov_funSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< StringVector >::type lnames(lnamesSEXP);
    rcpp_result_gen = Rcpp::wrap(make_cov_mat_ardC(x, x_pred, cov_par, cov_fun, delta, lnames));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sparseRGPs_real_to_pos", (DL_FUNC) &_sparseRGPs_real_to_pos, 1},
    {"_sparseRGPs_pos_to_real", (DL_FUNC) &_sparseRGPs_pos_to_real, 1},
    {"_sparseRGPs_real_to_bounded", (DL_FUNC) &_sparseRGPs_real_to_bounded, 3},
    {"_sparseRGPs_dsqexp_dsigmaC", (DL_FUNC) &_sparseRGPs_dsqexp_dsigmaC, 3},
    {"_sparseRGPs_dsqexp_dsigma_ardC", (DL_FUNC) &_sparseRGPs_dsqexp_dsigma_ardC, 4},
    {"_sparseRGPs_dsqexp_dlC", (DL_FUNC) &_sparseRGPs_dsqexp_dlC, 3},
    {"_sparseRGPs_dsqexp_dl_ardC", (DL_FUNC) &_sparseRGPs_dsqexp_dl_ardC, 5},
    {"_sparseRGPs_dsqexp_dtauC", (DL_FUNC) &_sparseRGPs_dsqexp_dtauC, 3},
    {"_sparseRGPs_dsqexp_dx2C", (DL_FUNC) &_sparseRGPs_dsqexp_dx2C, 5},
    {"_sparseRGPs_dsqexp_dx2_ardC", (DL_FUNC) &_sparseRGPs_dsqexp_dx2_ardC, 6},
    {"_sparseRGPs_dexp_dsigmaC", (DL_FUNC) &_sparseRGPs_dexp_dsigmaC, 3},
    {"_sparseRGPs_dexp_dlC", (DL_FUNC) &_sparseRGPs_dexp_dlC, 3},
    {"_sparseRGPs_dexp_dtauC", (DL_FUNC) &_sparseRGPs_dexp_dtauC, 3},
    {"_sparseRGPs_dsig_dthetaC", (DL_FUNC) &_sparseRGPs_dsig_dthetaC, 5},
    {"_sparseRGPs_dsig_dtheta_ardC", (DL_FUNC) &_sparseRGPs_dsig_dtheta_ardC, 6},
    {"_sparseRGPs_cov_fun_sqrd_expC", (DL_FUNC) &_sparseRGPs_cov_fun_sqrd_expC, 3},
    {"_sparseRGPs_cov_fun_sqrd_exp_ardC", (DL_FUNC) &_sparseRGPs_cov_fun_sqrd_exp_ardC, 4},
    {"_sparseRGPs_cov_fun_expC", (DL_FUNC) &_sparseRGPs_cov_fun_expC, 3},
    {"_sparseRGPs_make_cov_matC", (DL_FUNC) &_sparseRGPs_make_cov_matC, 5},
    {"_sparseRGPs_make_cov_mat_ardC", (DL_FUNC) &_sparseRGPs_make_cov_mat_ardC, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_sparseRGPs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
